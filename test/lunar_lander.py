from gym_client.lunar_lander_client import LunarLanderClient
from neat.ann.ann import Ann
import neat_tools

# 248.56512261124243 1000x
nodes = "Node(0, NodeType.INPUT), Node(1, NodeType.INPUT), Node(2, NodeType.INPUT), Node(3, NodeType.INPUT), Node(4, NodeType.INPUT), Node(5, NodeType.INPUT), Node(6, NodeType.INPUT), Node(7, NodeType.INPUT), Node(8, NodeType.INPUT), Node(9, NodeType.OUTPUT), Node(10, NodeType.OUTPUT), Node(11, NodeType.OUTPUT), Node(12, NodeType.OUTPUT), Node(67, NodeType.HIDDEN), Node(167, NodeType.HIDDEN), Node(118, NodeType.HIDDEN), Node(76, NodeType.HIDDEN), Node(405, NodeType.HIDDEN), Node(471, NodeType.HIDDEN), Node(461, NodeType.HIDDEN), Node(869, NodeType.HIDDEN), Node(899, NodeType.HIDDEN), Node(350, NodeType.HIDDEN), Node(1163, NodeType.HIDDEN), Node(1241, NodeType.HIDDEN), Node(147, NodeType.HIDDEN), Node(657, NodeType.HIDDEN), Node(129, NodeType.HIDDEN), Node(1595, NodeType.HIDDEN), Node(745, NodeType.HIDDEN), Node(576, NodeType.HIDDEN), Node(773, NodeType.HIDDEN), Node(1684, NodeType.HIDDEN), Node(1146, NodeType.HIDDEN), Node(124, NodeType.HIDDEN), Node(1299, NodeType.HIDDEN), Node(1169, NodeType.HIDDEN), Node(2135, NodeType.HIDDEN), Node(2053, NodeType.HIDDEN), Node(2226, NodeType.HIDDEN), Node(2585, NodeType.HIDDEN), Node(334, NodeType.HIDDEN), Node(548, NodeType.HIDDEN), Node(1838, NodeType.HIDDEN), Node(1984, NodeType.HIDDEN), Node(2708, NodeType.HIDDEN), Node(2427, NodeType.HIDDEN), Node(627, NodeType.HIDDEN), Node(199, NodeType.HIDDEN), Node(2309, NodeType.HIDDEN)"
edges = "0->9 (13) 0.4812248878716398, 0->10 (14) 0.17386706995891943, 0->11 (15) 0.16773798214426475, 0->12 (16) -0.1182175658205114, 1->9 (17) -0.03929509079142421, 1->10 (18) 0.11461418721419256, 1->11 (19) -0.19159090059791736, 1->12 (20) 0.055069907394839426, 2->9 (21) -0.19704732584975548, 2->10 (22) 0.28560413743389335, 2->11 (23) -0.21520461083012718, 2->12 (24) -0.3820799425808404, 3->9 (25) 0.0011393668489576177, 3->10 (26) 0.13914674786941203, 3->11 (27) -0.02513891617724573, 3->12 (28) 0.04200734065997739, 4->9 (29) 0.005652443705178288, 4->10 (30) -0.47646844497677854, 4->11 (31) 0.04819181510680773, 4->12 (32) 0.2660462015943028, 5->9 (33) -0.09736929648836723, 5->10 (34) -0.02080036255305082, 5->11 (35) -0.21048758587081914, 5->12 (36) 0.18094907788753967, 6->9 (37) 0.13975732859230722, 6->10 (38) 0.1800020813372675, 6->11 (39) 0.0540581319161847, 6->12 (40) -0.21817943227814712, 7->9 (41) -0.2643644141066997, 7->10 (42) 0.05775451831735613, 7->11 (43) -0.14479338356727062, 7->12 (44) 0.07259024701998738, 8->9 (45) -0.017278072463051602, 8->10 (46) 0.224481221599949, 8->11 (47) -0.09651031483502255, 8->12 (48) 0.05570837044364173, 7->67 (68) 1.0609462170964619, 67->9 (69) 3.0451212581573692, 0->67 (195) -0.4773583314881713, 5->167 (168) 0.3492022230559827, 167->10 (169) 0.9504895982906796, 67->11 (206) 1.2817970120890374, 4->118 (119) 2.774045149076355, 118->11 (120) -0.6246807084714635, 67->10 (185) 0.33963227991307815, 5->76 (77) 1.4091413250351197, 76->12 (78) -0.023858589176406788, 118->10 (344) -1.1635359034350754, 0->405 (406) -0.17856874463507644, 405->67 (407) -1.3262551809990537, 1->167 (459) 3.08027025490053, 5->471 (472) 1.0619358614396366, 471->76 (473) 1.3873727761120191, 5->461 (462) 0.8457813765408797, 461->10 (463) -0.7475479938844909, 3->167 (633) -0.35193007989836933, 8->471 (528) 1.8289477802303649, 7->167 (599) 0.31423284531547924, 4->67 (245) -1.03379441055039, 6->471 (672) 1.2287959919304132, 6->869 (870) 0.6115581694536388, 869->471 (871) 1.6234771856081005, 67->12 (223) -1.2227491756796334, 869->11 (958) -0.8525854021111703, 118->76 (429) 0.9037951697505711, 471->11 (649) -0.317262667266651, 8->869 (915) -2.5002067501280347, 4->76 (536) 0.06636464649436276, 3->899 (900) 2.238441627129093, 899->167 (901) 0.07879202987779528, 5->350 (351) 0.42497266602200967, 350->167 (352) 0.2804890602444187, 4->471 (708) 0.012242725191037012, 7->869 (1061) 0.6839959204191836, 405->869 (957) 0.4521797355315065, 3->1163 (1164) 2.2733745963348615, 1163->899 (1165) 1.088117519868005, 869->10 (960) 0.8108691413673126, 3->1241 (1242) 0.5586864011925348, 1241->899 (1243) 2.9794803683137077, 118->471 (618) -0.06270281950367496, 3->147 (148) -0.252142020478312, 147->11 (149) 1.449537645802534, 461->899 (1160) 0.2297196616691669, 7->147 (277) -0.2727389909595985, 118->657 (658) 1.7612553557688733, 657->471 (659) 0.8045997953789701, 0->147 (387) 0.418548359239183, 67->899 (1159) 0.9178804946080308, 3->129 (130) 1.3425768472720758, 129->10 (131) -0.1614225769064615, 67->1595 (1596) 2.4483514088035276, 1595->899 (1597) 0.6475487328192804, 657->9 (1719) -1.2788128689757023, 3->657 (1761) 0.14627328950252153, 5->745 (746) 0.8148509580435863, 745->471 (747) 1.134837604263565, 1241->657 (1511) -1.249167096553423, 1595->167 (1808) 0.35927970598596415, 3->461 (858) -1.3254529853608363, 1->869 (1084) -1.5887170768237207, 1241->11 (1257) -0.18185742233664304, 6->67 (216) -0.03752189382485677, 2->67 (239) 0.6376849270618947, 118->576 (577) 1.4352792120950855, 576->76 (578) 0.07538080347257195, 5->657 (1526) 0.32540284723102547, 129->471 (783) 0.6506173397145427, 5->773 (774) 1.5350882229433496, 773->350 (775) 0.26852639485467045, 461->9 (736) -0.5473246501957866, 118->745 (1915) 0.39907354108937904, 147->461 (1445) -0.6524034387765073, 5->1684 (1685) -0.4232321075212466, 1684->773 (1686) 0.2477542372880909, 3->1146 (1147) 0.6755716243881552, 1146->167 (1148) -0.07808499022603672, 869->657 (1573) 1.4598153040615338, 1->745 (1828) -0.6600843925869764, 7->76 (177) -0.7130997092441982, 461->1241 (1376) -0.18496816819544232, 745->129 (1846) 0.04767808331964331, 2->1241 (1340) -0.7381292861290358, 471->1684 (2258) -2.0785248155109177, 4->773 (2272) 0.6843103060062008, 1->124 (125) 0.7740483419949407, 124->9 (126) -0.04096736783203627, 1684->1146 (2359) -0.3881790628499773, 6->76 (391) 2.0034274448750984, 147->1595 (1760) -3.3010316903490873, 3->1299 (1300) 1.966749398640101, 1299->1241 (1301) 1.0772585656144675, 7->1684 (2478) 2.802053827837785, 8->1169 (1170) -0.8557397513574095, 1169->869 (1171) -2.4342544698367443, 2->1163 (1466) 0.6847085388817076, 129->2135 (2136) 0.4393137239789285, 2135->471 (2137) 0.8367756357020548, 8->1146 (2562) 1.8295132530671976, 8->745 (1823) 0.3383717836577018, 4->405 (614) -0.6479105075665548, 1169->67 (2683) -1.2775960813811318, 773->2053 (2054) 0.8884379390541544, 2053->350 (2055) -0.5043962150145664, 869->2226 (2227) 0.7305602537617547, 2226->657 (2228) 0.7859704636952837, 2135->576 (2602) 0.026604057256124795, 1169->899 (2652) 0.4179283697859842, 6->129 (1149) 0.4342737730369884, 147->2585 (2586) 1.4735414332605108, 2585->1595 (2587) -3.6726430939042447, 5->2135 (2880) -0.2995769099408746, 124->1299 (2687) 0.14182887438995223, 1595->76 (1767) 0.5212661199656288, 76->350 (630) -0.8114730476286843, 869->147 (1468) -1.662649510088103, 1169->405 (1520) 0.504398781508458, 67->334 (335) 1.2275077766772922, 334->10 (336) -0.31280438196745813, 745->2053 (2944) -0.05687539086378489, 405->548 (549) -0.9951489738670072, 548->67 (550) 1.0461601047702898, 118->869 (1001) -0.9550077283755701, 3->1838 (1839) 1.431279538724238, 1838->1146 (1840) 0.9703206330560619, 0->471 (613) -0.7969441834627761, 67->1146 (2071) 0.8739904260560554, 3->334 (3127) -1.6396823248318806, 5->2226 (3218) 0.4509462917680251, 7->899 (1618) -1.2354973603483994, 1241->1984 (1985) 1.1103704543984758, 1984->657 (1986) -1.133393688891585, 8->2708 (2709) 0.9385420705445009, 2708->745 (2710) 0.9448508834581378, 1684->2427 (2428) 1.1049725482979873, 2427->1146 (2429) -1.0270114900617118, 8->899 (1189) 0.046155462084485135, 1163->2053 (2557) 1.907423803804848, 5->627 (628) 3.597198089186144, 627->76 (629) -0.5627799335784879, 0->199 (200) 1.6125214580702383, 199->10 (201) 0.39056279640262254, 350->334 (3608) 2.783477399052084, 745->2309 (2310) 1.1013904239512415, 2309->129 (2311) 0.3248459188000566, 2708->2585 (3522) 0.4973035495320875, 350->2427 (3477) -0.8066244574330655, 2708->129 (3539) 1.516661433974753, 199->471 (3692) 0.4894309381885988, 576->773 (2174) -0.8672062684321227, 1684->1163 (2167) 0.43799035678477916"

client = LunarLanderClient()


genotype = neat_tools.parse_genotype(nodes, edges)
neat_tools.visualize_genotype(genotype)
ann = Ann(genotype)

client.render(ann)

scores = []

for i in range(1000):
    if i % 10 == 0:
        print(i)

    scores.append(client.get_fitness(ann))

fitness = sum(scores) / len(scores)
print(fitness)
